services:
  ai-service:
    build: 
      context: ./backend/ai_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - REDIS_URL=redis://keydb:6379
    volumes:
      - ./backend/ai_service/data:/app/data
      - ./backend/ai_service/pyq_data:/app/pyq_data
    restart: unless-stopped
    depends_on:
      - keydb
    networks:
      - upsc-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_API_URL=http://ai-service:8000
    depends_on:
      - ai-service
    restart: unless-stopped
    networks:
      - upsc-network

  # KeyDB - Redis alternative (better performance, 100% compatible)
  keydb:
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"
    volumes:
      - keydb_data:/data
    command: keydb-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --server-threads 4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "keydb-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - upsc-network

volumes:
  keydb_data:

networks:
  upsc-network:
    name: upsc-generator-network
    driver: bridge